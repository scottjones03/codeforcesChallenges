let read_int () = Scanf.scanf " %d" (fun x->x);;

let rec to_arr = function
| (n, arr, i) -> 
     if (i=n) then arr
     else begin
         arr.(i) <- read_int ();
         to_arr (n, arr, i+1)
     end
;;

let rec find_x = function
| (n, arr, p, i, j) ->
  (* Array.iter (fun x -> Printf.printf " %d" x) arr;
  print_newline (); *)
  (* print_int i; *)
    (* Printf.printf " %d %d %d\n" p i j; *)
     if (i==j) then begin
         if (arr.(i-1)<arr.(p)) then begin
         let temp_i = arr.(i-1) in
         arr.(i-1) <- arr.(p);
         arr.(p) <- temp_i;
         i
         end 
        else
         p
     end
     else if (arr.(i)<=arr.(p) && arr.(j-1)>=arr.(p)) then find_x (n, arr, p, i+1, j-1)
     else if (arr.(i)<=arr.(p)) then find_x (n, arr, p, i+1, j)
     else if (arr.(j-1)>=arr.(p)) then find_x (n, arr, p, i, j-1)
     else begin
         let temp_i = arr.(i) in
         arr.(i) <- arr.(j-1);
         arr.(j-1) <- temp_i;
         find_x (n, arr, p, i+1, j-1)
     end
;;
(* 1, 5, 6, 2
   sort_arr (4, arr, 0, 1, 3)
   x = 0
   sort_arr (4, arr, 1, 2, 3)
   1, 5, 6, 2
   x = 2
    *)
let rec sort_arr = function
| (n, arr, p, i, j) ->
     let x = find_x (n, arr, p, i, j) in
     if ((x-1<n) && ((x-1)>(i+1))) then sort_arr (n, arr, i, i, (x-1));
     if ((x+1<n) && (x+1)<j) then sort_arr (n, arr, (x+1), (x+1), j);
;;

(* let arr = [|1; 5; 6; 2; 1; 8; 7; 3; 10; 9; 20; 15|] in 
sort_arr (12, arr, 0, 0, 12);
Array.iter (fun x -> Printf.printf " %d" x) arr;; *)

let read_long () = Scanf.scanf " %Ld" (fun l -> l);;
let rec get_sum = function
| 0L -> Int64.zero
| n -> Int64.add (read_long ()) (get_sum (Int64.pred n))
;;

let run_case = function 
| () ->
  let n = read_long () in
  let s = get_sum (n) in 
  let m = Int64.sub s (Int64.mul (Int64.div s n) n) in
  if (m=0L) then Printf.printf "%d\n" 0
  else Printf.printf "%d\n" 1
;;

let rec iter_cases = function
| 0 -> ()
| t ->
  run_case ();
  iter_cases (t-1)
;;

let t=read_int() in 
iter_cases (t);;